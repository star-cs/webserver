/*
            Copyright Oliver Kowalke 2009.
   Distributed under the Boost Software License, Version 1.0.
      (See accompanying file LICENSE_1_0.txt or copy at
            http://www.boost.org/LICENSE_1_0.txt)
*/

/****************************************************************************************
 *                                                                                      *
 *  ----------------------------------------------------------------------------------  *
 *  |    0    |    1    |    2    |    3    |    4     |    5    |    6    |    7    |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x0   |   0x4   |   0x8   |   0xc   |   0x10   |   0x14  |   0x18  |   0x1c  |  *
 *  ----------------------------------------------------------------------------------  *
 *  | fc_mxcsr|fc_x87_cw|        R12        |         R13        |        R14        |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    8    |    9    |   10    |   11    |    12    |    13   |    14   |    15   |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x20  |   0x24  |   0x28  |  0x2c   |   0x30   |   0x34  |   0x38  |   0x3c  |  *
 *  ----------------------------------------------------------------------------------  *
 *  |        R15        |        RBX        |         RBP        |        RIP        |  *
 *  ----------------------------------------------------------------------------------  *
 *  ----------------------------------------------------------------------------------  *
 *  |    16   |   17    |                                                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  |   0x40  |   0x44  |                                                            |  *
 *  ----------------------------------------------------------------------------------  *
 *  |        EXIT       |                                                            |  *
 *  ----------------------------------------------------------------------------------  *
 *                                                                                      *
 * 栈帧布局说明：
 * 每个单元格表示4字节，共17个槽位（0x0-0x44）
 * 保存的寄存器顺序：MXCSR -> x87控制字 -> R12-R15 -> RBX -> RBP -> RIP -> exit code
 * 这是fcontext切换时的上下文保存结构
 ****************************************************************************************/

.text
.globl libgo_jump_fcontext
.type libgo_jump_fcontext,@function
.align 16  # 16字节对齐保证最佳性能

libgo_jump_fcontext:
    /* ==== 保存当前上下文 ==== */
    pushq  %rbp  # 保存基址指针（被调用者保存寄存器）
    pushq  %rbx  # 保存基址寄存器（被调用者保存）
    pushq  %r15  # 保存通用寄存器（被调用者保存）
    pushq  %r14  
    pushq  %r13  
    pushq  %r12  

    # 为FPU状态预留8字节栈空间（MXCSR和x87控制字各4字节）
    leaq  -0x8(%rsp), %rsp  # 调整栈指针

    # 检查preserve_fpu标志（通过rcx寄存器传递）
    cmp  $0, %rcx
    je  1f  # 如果为0，跳过FPU保存

    # 保存浮点单元状态：
    stmxcsr  (%rsp)   # 保存MMX/SSE控制状态寄存器
    fnstcw   0x4(%rsp) # 保存x87 FPU控制字

1:
    /* ==== 切换上下文 ==== */
    movq  %rsp, (%rdi)  # 将当前栈指针保存到第一个参数（旧上下文）
    movq  %rsi, %rsp    # 加载第二个参数（新上下文）到栈指针

    /* ==== 恢复新上下文 ==== */
    cmp  $0, %rcx       # 再次检查FPU标志
    je  2f

    # 恢复浮点单元状态：
    ldmxcsr  (%rsp)    # 加载MMX/SSE状态
    fldcw  0x4(%rsp)   # 加载x87控制字

2:
    leaq  0x8(%rsp), %rsp  # 回收FPU状态占用的栈空间

    /* 恢复保存的寄存器（逆序弹出） */
    popq  %r12  
    popq  %r13  
    popq  %r14  
    popq  %r15  
    popq  %rbx  
    popq  %rbp  

    /* ==== 执行上下文跳转 ==== */
    popq  %r8        # 弹出目标地址到R8（通常是返回地址）
    movq  %rdx, %rax # 将第三个参数（数据）存入返回值寄存器
    movq  %rdx, %rdi # 同时作为新上下文的第一个参数
    jmp  *%r8        # 跳转到目标地址（实现上下文切换）
.size libgo_jump_fcontext,.-libgo_jump_fcontext

# 标记不需要可执行栈（安全增强）
.section .note.GNU-stack,"",%progbits
